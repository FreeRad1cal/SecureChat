version: '3.4'

services:
  auth.service:
    environment:
        ASPNETCORE_ENVIRONMENT: Development
        AuthDbConnectionString: Server=mysql; Database=auth_db; Uid=auth; Pwd=12345;
        AccountDbConnectionString: Server=mysql; Database=account_db; Uid=account; Pwd=12345;
        AngularSpaClientUrl: http://${EXTERNAL_DNS_NAME_OR_IP}:6001
        PublicOriginUrl: http://${EXTERNAL_DNS_NAME_OR_IP}:5101
        RegistrationUrl: http://${EXTERNAL_DNS_NAME_OR_IP}:6002/registration
        PasswordResetUrl: http://${EXTERNAL_DNS_NAME_OR_IP}:6002/password-reset
    extra_hosts:
        - ${EXTERNAL_DNS_NAME_OR_IP}:172.17.0.1
    healthcheck:
        test: ["CMD", "curl --fail auth.service/health || exit"]

  account.service:
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionString: Server=mysql; Database=account_db; Uid=account; Pwd=12345;
      EventBusConnection: rabbitmq
      EventBusUserName: rabbitmq
      EventBusPassword: "12345"
      EventBusQueueName: account.service
      SendGridUser: ${SEND_GRID_USER}
      SendGridKey: ${SEND_GRID_KEY}
      AuthUrl: http://${EXTERNAL_DNS_NAME_OR_IP}:5101
      EmailConfirmationUrl: http://${EXTERNAL_DNS_NAME_OR_IP}:6002/email-confirmation
      BypassAuthenticationHeader: ${BYPASS_AUTHENTICATION_HEADER}
      BypassAuthenticationSecret: ${BYPASS_AUTHENTICATION_SECRET}
    extra_hosts:
      - ${EXTERNAL_DNS_NAME_OR_IP}:172.17.0.1
    ports:
        - "5002:80"
    healthcheck:
        test: ["CMD", "curl --fail account.service/health || exit"]

  chat.service:
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionString: Server=mysql; Database=chat_db; Uid=chat; Pwd=12345;
      EventBusConnection: rabbitmq
      EventBusUserName: rabbitmq
      EventBusPassword: "12345"
      EventBusQueueName: account.service
      AuthUrl: http://${EXTERNAL_DNS_NAME_OR_IP}:5101
      BypassAuthenticationHeader: ${BYPASS_AUTHENTICATION_HEADER}
      BypassAuthenticationSecret: ${BYPASS_AUTHENTICATION_SECRET}
    extra_hosts:
      - ${EXTERNAL_DNS_NAME_OR_IP}:172.17.0.1
    ports:
        - "5003:80"
    healthcheck:
        test: ["CMD", "curl --fail chat.service/health || exit"]

  registration.app:
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      AccountApiUrl: http://${EXTERNAL_DNS_NAME_OR_IP}:5102
      AuthUrl: http://${EXTERNAL_DNS_NAME_OR_IP}:5101
    depends_on:
      - account.apigw
    extra_hosts:
      - ${EXTERNAL_DNS_NAME_OR_IP}:172.17.0.1

  angularspa.app:
    environment:
        ASPNETCORE_ENVIRONMENT: Development
        AngularSpaDevClient: http://angularspa.development.app:4200
        AccountApiUrl: http://${EXTERNAL_DNS_NAME_OR_IP}:5102/api
        ChatApiUrl: http://${EXTERNAL_DNS_NAME_OR_IP}:5103/api
        AuthUrl: http://${EXTERNAL_DNS_NAME_OR_IP}:5101
        ClientId: AngularSpaClient
    depends_on:
      - angularspa.development.app

  angularspa.development.app:
    build: 
      context: .
      dockerfile: Web/AngularSPA.Development/Dockerfile
    volumes:
      - ./Web/AngularSPA/Client:/app
    ports:
      - '4200:4200'
      - '9876:9876'
    environment:
      AccountApiUrl: http://${EXTERNAL_DNS_NAME_OR_IP}:5102/api
      ChatApiUrl: http://${EXTERNAL_DNS_NAME_OR_IP}:5103/api
      AuthUrl: http://${EXTERNAL_DNS_NAME_OR_IP}:5101
      ClientId: AngularSpaClient

  account.apigw:
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      AuthServiceUrl: http://auth.service
      BypassAuthenticationHeader: ${BYPASS_AUTHENTICATION_HEADER}
    volumes:
      - ./ApiGateways/Account/apigw:/app/configuration
    depends_on:
      - auth.service
      - account.service

  chat.apigw:
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      AuthServiceUrl: http://auth.service
      BypassAuthenticationHeader: ${BYPASS_AUTHENTICATION_HEADER}
    volumes:
      - ./ApiGateways/Chat/apigw:/app/configuration
    depends_on:
      - auth.service
      - chat.service

  rabbitmq:
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq 
      RABBITMQ_DEFAULT_PASS: "12345"

  nginx:
    ports:
      - "5101:5101"
      - "5102:5102"
      - "5103:5103"
      - "6001:6001"
      - "6002:6002"
    volumes:
      - './Infrastructure/nginx/config/nginx.dev.conf:/etc/nginx/nginx.conf'
  
  mysql:
    ports:
      - "3306"
    environment:
        MYSQL_ROOT_PASSWORD: "12345"
    volumes:
      - ./Infrastructure/mysql/initdb:/docker-entrypoint-initdb.d
      - ./Infrastructure/mysql/data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-uroot", "-p12345"]

  flyway:
    entrypoint:
      - /bin/sh
      - -c
      - |
          /flyway/flyway -url=jdbc:mysql://mysql/chat_db -locations=filesystem:/flyway/sql/chat_db -user=chat -password=12345 -connectRetries=60 migrate
    volumes:
      - ./Infrastructure/mysql/migrations:/flyway/sql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    depends_on:
        - mysql
    ports:
        - "8081:80"
    environment:
        MYSQL_USERNAME: root
        MYSQL_ROOT_PASSWORD: "12345"
        PMA_HOST: mysql

  healthchecksui:
    environment:
        - HealthChecksUI__HealthChecks__0__Name=Auth Service Check
        - HealthChecksUI__HealthChecks__0__Uri=http://auth.service/health
        - HealthChecksUI__HealthChecks__1__Name=Account Service Check
        - HealthChecksUI__HealthChecks__1__Uri=http://account.service/health
        - HealthChecksUI__HealthChecks__2__Name=Chat Service Check
        - HealthChecksUI__HealthChecks__2__Uri=http://chat.service/health
    ports:
        - "5004:80"